#!/usr/bin/env python3
# -*- coding: utf-8 -*-

def analyze_prompt_loss():
    """分析Prompt转换导致的信息丢失"""
    
    # 原始完整Prompt（模拟多阶段检索系统的输出）
    original_prompt = """你是一位专业的金融分析师，擅长分析公司财务报告并回答相关问题。

请基于以下公司财务报告片段，回答用户的问题。你的回答必须：
1. 准确、客观，基于提供的财务数据
2. 使用专业术语，但确保易于理解
3. 如果信息不足，明确指出并说明需要哪些额外信息
4. 提供具体的数字和百分比支持你的分析
5. 结构化分析，包含财务指标、趋势分析和风险评估
6. 避免主观判断，基于数据说话

【公司财务报告片段】
---
2023年年度报告显示，公司营业收入达到1,234.56亿元，同比增长15.3%。净利润为123.45亿元，同比增长12.8%。毛利率为25.6%，较上年同期提升1.2个百分点。研发投入为98.76亿元，占营业收入比例为8.0%，同比增长20.1%。经营活动现金流净额为156.78亿元，同比增长18.5%。资产负债率为45.2%，较上年同期下降2.1个百分点。存货周转率为6.8次，应收账款周转率为12.3次。
---

【用户问题】
请分析公司的财务状况和盈利能力，并评估其未来发展前景。
---

请基于上述信息提供详细的分析。"""

    # 转换后的简单格式（模拟当前转换逻辑的输出）
    converted_prompt = """2023年年度报告显示，公司营业收入达到1,234.56亿元，同比增长15.3%。净利润为123.45亿元，同比增长12.8%。毛利率为25.6%，较上年同期提升1.2个百分点。研发投入为98.76亿元，占营业收入比例为8.0%，同比增长20.1%。经营活动现金流净额为156.78亿元，同比增长18.5%。资产负债率为45.2%，较上年同期下降2.1个百分点。存货周转率为6.8次，应收账款周转率为12.3次。

问题：请分析公司的财务状况和盈利能力，并评估其未来发展前景。

回答："""

    print("=== Prompt转换信息丢失分析 ===")
    print(f"原始Prompt长度: {len(original_prompt)} 字符")
    print(f"转换后Prompt长度: {len(converted_prompt)} 字符")
    print(f"信息丢失比例: {((len(original_prompt) - len(converted_prompt)) / len(original_prompt) * 100):.1f}%")
    
    print("\n=== 丢失的关键信息 ===")
    
    # 分析丢失的信息类型
    lost_info = {
        "角色定义": "你是一位专业的金融分析师，擅长分析公司财务报告并回答相关问题。",
        "回答要求1": "准确、客观，基于提供的财务数据",
        "回答要求2": "使用专业术语，但确保易于理解", 
        "回答要求3": "如果信息不足，明确指出并说明需要哪些额外信息",
        "回答要求4": "提供具体的数字和百分比支持你的分析",
        "回答要求5": "结构化分析，包含财务指标、趋势分析和风险评估",
        "回答要求6": "避免主观判断，基于数据说话",
        "格式要求": "请基于上述信息提供详细的分析。"
    }
    
    for info_type, content in lost_info.items():
        print(f"❌ {info_type}: {content}")
    
    print("\n=== 影响分析 ===")
    impacts = [
        "1. 模型失去专业角色定位，可能给出非专业回答",
        "2. 缺少结构化分析要求，回答可能缺乏条理",
        "3. 没有数字和百分比要求，回答可能过于定性",
        "4. 缺少风险评估要求，分析可能不够全面",
        "5. 没有格式规范，回答可能不符合预期",
        "6. 缺少信息不足处理指导，可能给出错误推断"
    ]
    
    for impact in impacts:
        print(impact)
    
    print("\n=== 建议解决方案 ===")
    solutions = [
        "1. 完全禁用转换，使用完整Prompt",
        "2. 优化转换逻辑，保留关键指令",
        "3. 使用其他对复杂指令理解更好的模型",
        "4. 重新设计Prompt模板，简化但保留核心要求"
    ]
    
    for solution in solutions:
        print(solution)

if __name__ == "__main__":
    analyze_prompt_loss() 